openapi: 3.0.3
info:
  title: SmartWrap
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/login:
    post:
      summary: 'Log in a user.'
      operationId: logInAUser
      description: "This endpoint allows a user to log in by providing their email and password.\nIf the credentials are correct, it returns an access token and user information."
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n  \"status\": \"success\",\n  \"message\": \"User is logged in successfully.\",\n  \"data\": {\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\",\n    \"user\": {\n      \"id\": 1,\n      \"name\": \"John Doe\",\n      \"email\": \"user@example.com\",\n      ...\n    }\n  }\n}"
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Invalid credentials'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Invalid credentials'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Validation Error!'
                  data:
                    email:
                      - 'The email field is required.'
                    password:
                      - 'The password field is required.'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Validation Error!'
                  data:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The email field is required.'
                        items:
                          type: string
                      password:
                        type: array
                        example:
                          - 'The password field is required.'
                        items:
                          type: string
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: "The user's email address."
                  example: user@example.com
                password:
                  type: string
                  description: "The user's password."
                  example: password123
              required:
                - email
                - password
      security: []
    get:
      summary: ''
      operationId: getApiLogin
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  type: Unauthenticated
                properties:
                  type:
                    type: string
                    example: Unauthenticated
      tags:
        - Endpoints
      security: []
  /api/logout:
    post:
      summary: 'Log out the authenticated user.'
      operationId: logOutTheAuthenticatedUser
      description: 'This endpoint logs out the authenticated user by revoking all their tokens.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'User is logged out successfully'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'User is logged out successfully'
      tags:
        - Authentication
  /api/banks:
    get:
      summary: 'Get a list of all banks.'
      operationId: getAListOfAllBanks
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"status\": \"success\",\n \"banks\": [\n     {\n         \"id\": 1,\n         \"bank_name\": \"Bank of America\",\n         \"bank_address\": \"123 Main St, New York, NY\",\n         \"account_name\": \"John Doe\",\n         \"account_no\": \"1234567890\",\n         \"ifsc_code\": \"BOFAUS3N\",\n         \"swift_code\": \"BOFAUS3NXXX\",\n         \"bank_ad_code_no\": \"AD12345678\",\n         \"iban_no\": \"GB82WEST12345698765432\"\n     },\n     ...\n ]\n}"
      tags:
        - 'Bank Management'
      security: []
    post:
      summary: 'Store a newly created bank in the database.'
      operationId: storeANewlyCreatedBankInTheDatabase
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Bank details is stored'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Bank details is stored'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Validation error'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Validation error'
      tags:
        - 'Bank Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bank_name:
                  type: string
                  description: 'The name of the bank.'
                  example: 'Bank of America'
                bank_address:
                  type: string
                  description: 'The address of the bank.'
                  example: '123 Main St, New York, NY'
                account_name:
                  type: string
                  description: 'The name of the account holder.'
                  example: 'John Doe'
                account_no:
                  type: string
                  description: 'The bank account number.'
                  example: '1234567890'
                ifsc_code:
                  type: string
                  description: 'The IFSC code of the bank.'
                  example: BOFAUS3N
                swift_code:
                  type: string
                  description: 'The SWIFT code of the bank.'
                  example: BOFAUS3NXXX
                bank_ad_code_no:
                  type: string
                  description: 'The bank AD code number.'
                  example: AD12345678
                iban_no:
                  type: string
                  description: 'The IBAN number of the bank account.'
                  example: GB82WEST12345698765432
              required:
                - bank_name
                - bank_address
                - account_name
                - account_no
                - ifsc_code
      security: []
  /api/company-profile:
    get:
      summary: 'Get company profile details.'
      operationId: getCompanyProfileDetails
      description: 'variable is like small case and replace space with underscore'
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"status\": \"success\",\n \"comapny_profile\": [\n     {\n         \"id\": 1,\n         \"company_name\": \"SmartWrap\",\n     },\n     ...\n ]\n}"
      tags:
        - 'Company Profile'
      security: []
tags:
  -
    name: Authentication
    description: ''
  -
    name: 'Bank Management'
    description: ''
  -
    name: 'Company Profile'
    description: ''
  -
    name: Endpoints
    description: ''
