openapi: 3.0.3
info:
  title: SmartWrap
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/login:
    post:
      summary: 'Log in a user.'
      operationId: logInAUser
      description: "This endpoint allows a user to log in by providing their email and password.\nIf the credentials are correct, it returns an access token and user information."
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n  \"status\": \"success\",\n  \"message\": \"User is logged in successfully.\",\n  \"data\": {\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\",\n    \"user\": {\n      \"id\": 1,\n      \"name\": \"John Doe\",\n      \"email\": \"user@example.com\",\n      ...\n    }\n  }\n}"
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Invalid credentials'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Invalid credentials'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Validation Error!'
                  data:
                    email:
                      - 'The email field is required.'
                    password:
                      - 'The password field is required.'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Validation Error!'
                  data:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The email field is required.'
                        items:
                          type: string
                      password:
                        type: array
                        example:
                          - 'The password field is required.'
                        items:
                          type: string
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: "The user's email address."
                  example: user@example.com
                password:
                  type: string
                  description: "The user's password."
                  example: password123
              required:
                - email
                - password
      security: []
    get:
      summary: ''
      operationId: getApiLogin
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  type: Unauthenticated
                properties:
                  type:
                    type: string
                    example: Unauthenticated
      tags:
        - Endpoints
      security: []
  /api/logout:
    post:
      summary: 'Log out the authenticated user.'
      operationId: logOutTheAuthenticatedUser
      description: 'This endpoint logs out the authenticated user by revoking all their tokens.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'User is logged out successfully'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'User is logged out successfully'
      tags:
        - Authentication
  /api/banks:
    get:
      summary: 'Get a list of all banks.'
      operationId: getAListOfAllBanks
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"status\": \"success\",\n \"banks\": [\n     {\n         \"id\": 1,\n         \"bank_name\": \"Bank of America\",\n         \"bank_address\": \"123 Main St, New York, NY\",\n         \"account_name\": \"John Doe\",\n         \"account_no\": \"1234567890\",\n         \"ifsc_code\": \"BOFAUS3N\",\n         \"swift_code\": \"BOFAUS3NXXX\",\n         \"bank_ad_code_no\": \"AD12345678\",\n         \"iban_no\": \"GB82WEST12345698765432\"\n     },\n     ...\n ]\n}"
      tags:
        - 'Bank Management'
      security: []
    post:
      summary: 'Store a newly created bank in the database.'
      operationId: storeANewlyCreatedBankInTheDatabase
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Bank details is stored'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Bank details is stored'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Validation error'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Validation error'
      tags:
        - 'Bank Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bank_name:
                  type: string
                  description: 'The name of the bank.'
                  example: 'Bank of America'
                bank_address:
                  type: string
                  description: 'The address of the bank.'
                  example: '123 Main St, New York, NY'
                account_name:
                  type: string
                  description: 'The name of the account holder.'
                  example: 'John Doe'
                account_no:
                  type: string
                  description: 'The bank account number.'
                  example: '1234567890'
                ifsc_code:
                  type: string
                  description: 'The IFSC code of the bank.'
                  example: BOFAUS3N
                swift_code:
                  type: string
                  description: 'The SWIFT code of the bank.'
                  example: BOFAUS3NXXX
                bank_ad_code_no:
                  type: string
                  description: 'The bank AD code number.'
                  example: AD12345678
                iban_no:
                  type: string
                  description: 'The IBAN number of the bank account.'
                  example: GB82WEST12345698765432
              required:
                - bank_name
                - bank_address
                - account_name
                - account_no
                - ifsc_code
      security: []
  /api/company-profile-get:
    get:
      summary: 'Get company profile details.'
      operationId: getCompanyProfileDetails
      description: 'variable is like small case and replace space with underscore. Use "/upload/file_name" path for company logo and signature.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"status\": \"success\",\n \"comapny_profile\":[\n     {\n         \"id\": 1dkjvskj-dnjdj-xnxskj,\n         \"company_name\": \"Sample Company Ltd.\",\n         \"contact_person_name\":\"Ashish Patel\",\n         \"otp_mobile_phone\":\"08796543210\",\n         \"mobile\":\"08796543210\",\n         \"email\":\"abc@gmail.com\",\n         \"phone_no\":\"7896513\",\n         \"fax_no\":\"08796543210\",\n         \"website\":\"http://www.samplecompany.com\",\n         \"company_register\":\"Register123\",\n         \"address\":\"Rajkot, Gujarat, India - 360004.\",\n         \"portal_address\":\"http://portal.samplecompany.com\",\n         \"company_type\":\"Private Limited\",\n         \"gst_no\":\"GSTIN123456789\",\n         \"lut_no\":\"LUT12345\",\n         \"cin\":\"CIN123456789\",\n         \"gst_circular_no\":\"CIRC123456789\",\n         \"state_code\":\"SC\",\n         \"lei_no\":\"LEI1234567890\",\n         \"field_3\":\"Value3\",\n         \"pan_no\":\"PAN123456789\",\n         \"lut_expiry\":\"2025-12-31\",\n         \"rcmc_no\": \"RCMC123456\",\n         \"date_of_filling_rex_number\": \"2024-06-25\",\n         \"field_1\": \"Value1\",\n         \"field_4\": \"Value4\",\n         \"iec_no\": \"IEC123456789\",\n         \"bin_no\": \"BIN123456\",\n         \"rcmc_expiry\": \"2026-12-31\",\n         \"circular_no\": \"CIRC789456123\",\n         \"aeo_no\": \"AEO123456\",\n         \"field_2\": \"Value2\",\n         \"field_5\": \"Value5\",\n         \"pre_carriage_by\": \"Road\",\n         \"state_of_origin\": \"Sample State\",\n         \"delivery_period\": \"30 days\",\n         \"terms_of_delivery\": \"FOB\",\n         \"place_of_receipt\": \"Sample Port\",\n         \"part_of_loading\": \"Loading Dock A\",\n         \"partial_shipement\": \"No\",\n         \"district_of_origin\": \"Sample District\",\n         \"trans_shipement\": \"No\",\n         \"variety_of_quality\": \"Premium\",\n         \"company_logo\": \"sample_logo.png\",\n         \"signature_upload\": \"signature.png\",\n         \"range\": \"Range 1\",\n         \"division\": \"Division A\",\n         \"commissionerate\": \"Commissionerate 1\",\n         \"location_code\": \"LOC123\",\n         \"annexure_remark\": \"N/A\",\n         \"shipper_name\": \"Sample Shipper\",\n         \"method_used_for_vgm\": \"Weighbridge\",\n         \"weighbridge_slip_no\":\_\"WS123456\",\n         \"bank_id\":\"fbdj54-fvd-g45bbf-5tgr4\",\n     },\n]\n}"
      tags:
        - 'Company Profile'
      security: []
  /api/company-profile:
    put:
      summary: 'Update company profile details.'
      operationId: updateCompanyProfileDetails
      description: "This endpoint allows you to update the company profile details. The variables are in snake_case and should be provided in the request body. company_logo and signature_upload both send direct file only, don't refer example for both."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Company Profile updated successfully'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Company Profile updated successfully'
      tags:
        - 'Company Profile'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: 'The unique identifier for the company profile.'
                  example: 1dkjvskj-dnjdj-xnxskj
                company_name:
                  type: string
                  description: 'The name of the company.'
                  example: 'Sample Company Ltd.'
                contact_person_name:
                  type: string
                  description: 'The name of the contact person.'
                  example: 'Ashish Patel'
                otp_mobile_phone:
                  type: string
                  description: 'The OTP mobile phone number.'
                  example: '08796543210'
                mobile:
                  type: string
                  description: 'The mobile phone number.'
                  example: '08796543210'
                email:
                  type: string
                  description: 'The email address.'
                  example: abc@gmail.com
                phone_no:
                  type: string
                  description: 'The phone number.'
                  example: '7896513'
                fax_no:
                  type: string
                  description: 'The fax number.'
                  example: '08796543210'
                website:
                  type: string
                  description: 'The company website URL.'
                  example: 'http://www.samplecompany.com'
                company_register:
                  type: string
                  description: 'The company registration number.'
                  example: Register123
                address:
                  type: string
                  description: 'The company address.'
                  example: 'Rajkot, Gujarat, India - 360004.'
                portal_address:
                  type: string
                  description: 'The company portal address.'
                  example: 'http://portal.samplecompany.com'
                company_type:
                  type: string
                  description: 'The type of the company.'
                  example: 'Private Limited'
                gst_no:
                  type: string
                  description: 'The GST number.'
                  example: GSTIN123456789
                lut_no:
                  type: string
                  description: 'The LUT number.'
                  example: LUT12345
                cin:
                  type: string
                  description: 'The CIN number.'
                  example: CIN123456789
                gst_circular_no:
                  type: string
                  description: 'The GST circular number.'
                  example: CIRC123456789
                state_code:
                  type: string
                  description: 'The state code.'
                  example: SC
                lei_no:
                  type: string
                  description: 'The LEI number.'
                  example: LEI1234567890
                field_3:
                  type: string
                  description: 'Additional field 3.'
                  example: Value3
                pan_no:
                  type: string
                  description: 'The PAN number.'
                  example: PAN123456789
                lut_expiry:
                  type: date
                  description: 'The LUT expiry date.'
                  example: '2025-12-31'
                rcmc_no:
                  type: string
                  description: 'The RCMC number.'
                  example: RCMC123456
                date_of_filling_rex_number:
                  type: date
                  description: 'The date of filling REX number.'
                  example: '2024-06-25'
                field_1:
                  type: string
                  description: 'Additional field 1.'
                  example: Value1
                field_4:
                  type: string
                  description: 'Additional field 4.'
                  example: Value4
                iec_no:
                  type: string
                  description: 'The IEC number.'
                  example: IEC123456789
                bin_no:
                  type: string
                  description: 'The BIN number.'
                  example: BIN123456
                rcmc_expiry:
                  type: date
                  description: 'The RCMC expiry date.'
                  example: '2026-12-31'
                circular_no:
                  type: string
                  description: 'The circular number.'
                  example: CIRC789456123
                aeo_no:
                  type: string
                  description: 'The AEO number.'
                  example: AEO123456
                field_2:
                  type: string
                  description: 'Additional field 2.'
                  example: Value2
                field_5:
                  type: string
                  description: 'Additional field 5.'
                  example: Value5
                pre_carriage_by:
                  type: string
                  description: 'The mode of pre-carriage.'
                  example: Road
                state_of_origin:
                  type: string
                  description: 'The state of origin.'
                  example: 'Sample State'
                delivery_period:
                  type: string
                  description: 'The delivery period.'
                  example: '30 days'
                terms_of_delivery:
                  type: string
                  description: 'The terms of delivery.'
                  example: FOB
                place_of_receipt:
                  type: string
                  description: 'The place of receipt.'
                  example: 'Sample Port'
                part_of_loading:
                  type: string
                  description: 'The part of loading.'
                  example: 'Loading Dock A'
                partial_shipement:
                  type: string
                  description: 'Indicates if partial shipment is allowed.'
                  example: 'No'
                district_of_origin:
                  type: string
                  description: 'The district of origin.'
                  example: 'Sample District'
                trans_shipement:
                  type: string
                  description: 'Indicates if trans-shipment is allowed.'
                  example: 'No'
                variety_of_quality:
                  type: string
                  description: 'The variety of quality.'
                  example: Premium
                company_logo:
                  type: string
                  format: binary
                  description: 'The company logo file. Select file only.'
                signature_upload:
                  type: string
                  format: binary
                  description: 'The signature upload file. Select file only.'
                range:
                  type: string
                  description: 'The range.'
                  example: 'Range 1'
                division:
                  type: string
                  description: 'The division.'
                  example: 'Division A'
                commissionerate:
                  type: string
                  description: 'The commissionerate.'
                  example: 'Commissionerate 1'
                location_code:
                  type: string
                  description: 'The location code.'
                  example: LOC123
                annexure_remark:
                  type: string
                  description: 'The annexure remark.'
                  example: N/A
                shipper_name:
                  type: string
                  description: 'The name of the shipper.'
                  example: 'Sample Shipper'
                method_used_for_vgm:
                  type: string
                  description: 'The method used for VGM.'
                  example: Weighbridge
                weighbridge_slip_no:
                  type: string
                  description: 'The weighbridge slip number.'
                  example: WS123456
                bank_id:
                  type: string
                  description: 'The bank identifier.'
                  example: fbdj54-fvd-g45bbf-5tgr4
              required:
                - id
                - company_name
                - contact_person_name
                - otp_mobile_phone
                - mobile
                - email
      security: []
  /api/company-raw-material:
    get:
      summary: 'Raw Materials list'
      operationId: rawMaterialsList
      description: "Display a listing of the company raw materials.\nThis endpoint returns a list of all company raw materials."
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"status\": \"success\",\n \"company_raw_materials\": [\n     {\n         \"id\": 1dfd-4tfv-4gdgr,\n         \"company_name\": \"Company A\",\n         \"total_pallet\": 10,\n         \"bag_per_pallet\": 20,\n         \"total_bag\": 200,\n         \"weight_per_bag\": 50,\n         \"total_weight\": 10000\n     },\n     ...\n ]\n}"
      tags:
        - 'Company Raw Materials'
      security: []
    post:
      summary: 'Create Raw Material'
      operationId: createRawMaterial
      description: "Store a newly created company raw material in storage.\nThis endpoint allows you to create a new company raw material."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Company Raw Materials are stored'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Company Raw Materials are stored'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    company_name:
                      - 'Company Name is required'
                    total_pallet:
                      - 'Total Pallet is required'
                      - 'Total Pallet must be numeric'
                    bag_per_pallet:
                      - 'Bag Per Pallet is required'
                      - 'Bag Per Pallet must be numeric'
                    total_bag:
                      - 'Total Bag is required'
                      - 'Total Bag must be numeric'
                    weight_per_bag:
                      - 'Weight Per Bag is required'
                      - 'Weight Per Bag must be numeric'
                    total_weight:
                      - 'Total Weight is required'
                      - 'Total Weight must be numeric'
                properties:
                  errors:
                    type: object
                    properties:
                      company_name:
                        type: array
                        example:
                          - 'Company Name is required'
                        items:
                          type: string
                      total_pallet:
                        type: array
                        example:
                          - 'Total Pallet is required'
                          - 'Total Pallet must be numeric'
                        items:
                          type: string
                      bag_per_pallet:
                        type: array
                        example:
                          - 'Bag Per Pallet is required'
                          - 'Bag Per Pallet must be numeric'
                        items:
                          type: string
                      total_bag:
                        type: array
                        example:
                          - 'Total Bag is required'
                          - 'Total Bag must be numeric'
                        items:
                          type: string
                      weight_per_bag:
                        type: array
                        example:
                          - 'Weight Per Bag is required'
                          - 'Weight Per Bag must be numeric'
                        items:
                          type: string
                      total_weight:
                        type: array
                        example:
                          - 'Total Weight is required'
                          - 'Total Weight must be numeric'
                        items:
                          type: string
      tags:
        - 'Company Raw Materials'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                company_name:
                  type: string
                  description: 'The name of the company.'
                  example: 'Company A'
                total_pallet:
                  type: numeric
                  description: 'The total number of pallets.'
                  example: '10'
                bag_per_pallet:
                  type: numeric
                  description: 'The number of bags per pallet.'
                  example: '20'
                total_bag:
                  type: numeric
                  description: 'The total number of bags.'
                  example: '200'
                weight_per_bag:
                  type: numeric
                  description: 'The weight per bag.'
                  example: '50'
                total_weight:
                  type: numeric
                  description: 'The total weight.'
                  example: '10000'
              required:
                - company_name
                - total_pallet
                - bag_per_pallet
                - total_bag
                - weight_per_bag
                - total_weight
      security: []
  '/api/company-raw-material/{id}':
    put:
      summary: 'Update Raw Mateial'
      operationId: updateRawMateial
      description: "Update the specified company raw material in storage.\nThis endpoint allows you to update an existing company raw material by providing its ID and the updated information."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Company Raw Materials are updated'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Company Raw Materials are updated'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    company_name:
                      - 'Company Name is required'
                    total_pallet:
                      - 'Total Pallet is required'
                      - 'Total Pallet must be numeric'
                    bag_per_pallet:
                      - 'Bag Per Pallet is required'
                      - 'Bag Per Pallet must be numeric'
                    total_bag:
                      - 'Total Bag is required'
                      - 'Total Bag must be numeric'
                    weight_per_bag:
                      - 'Weight Per Bag is required'
                      - 'Weight Per Bag must be numeric'
                    total_weight:
                      - 'Total Weight is required'
                      - 'Total Weight must be numeric'
                properties:
                  errors:
                    type: object
                    properties:
                      company_name:
                        type: array
                        example:
                          - 'Company Name is required'
                        items:
                          type: string
                      total_pallet:
                        type: array
                        example:
                          - 'Total Pallet is required'
                          - 'Total Pallet must be numeric'
                        items:
                          type: string
                      bag_per_pallet:
                        type: array
                        example:
                          - 'Bag Per Pallet is required'
                          - 'Bag Per Pallet must be numeric'
                        items:
                          type: string
                      total_bag:
                        type: array
                        example:
                          - 'Total Bag is required'
                          - 'Total Bag must be numeric'
                        items:
                          type: string
                      weight_per_bag:
                        type: array
                        example:
                          - 'Weight Per Bag is required'
                          - 'Weight Per Bag must be numeric'
                        items:
                          type: string
                      total_weight:
                        type: array
                        example:
                          - 'Total Weight is required'
                          - 'Total Weight must be numeric'
                        items:
                          type: string
      tags:
        - 'Company Raw Materials'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                company_name:
                  type: string
                  description: 'The name of the company.'
                  example: 'Company A'
                total_pallet:
                  type: numeric
                  description: 'The total number of pallets.'
                  example: '10'
                bag_per_pallet:
                  type: numeric
                  description: 'The number of bags per pallet.'
                  example: '20'
                total_bag:
                  type: numeric
                  description: 'The total number of bags.'
                  example: '200'
                weight_per_bag:
                  type: numeric
                  description: 'The weight per bag.'
                  example: '50'
                total_weight:
                  type: numeric
                  description: 'The total weight.'
                  example: '10000'
              required:
                - company_name
                - total_pallet
                - bag_per_pallet
                - total_bag
                - weight_per_bag
                - total_weight
      security: []
    delete:
      summary: 'Delete Raw Materials'
      operationId: deleteRawMaterials
      description: "Remove the specified company raw material from storage.\nThis endpoint allows you to delete a company raw material by providing its ID."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Raw material is deleted'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Raw material is deleted'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'No records found'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'No records found'
      tags:
        - 'Company Raw Materials'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the company raw material to update.'
        example: '1'
        required: true
        schema:
          type: string
  /api/company-raw-material-calculation:
    get:
      summary: 'Calculate the totals for pallets, bags, bags per pallet, weight per bag, and total weight.'
      operationId: calculateTheTotalsForPalletsBagsBagsPerPalletWeightPerBagAndTotalWeight
      description: "This endpoint calculates the sum of various properties of company raw materials filtered by a specific date.\nThe properties include total pallet count, total bag count, total bags per pallet count, total weight per bag count, and total weight count."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  company_raw_materials:
                    -
                      id: 1
                      company_name: 'Company A'
                      total_pallet: 10
                      bag_per_pallet: 50
                      total_bag: 500
                      weight_per_bag: 20
                      total_weight: 10000
                  totalPalletCount: 10
                  totalBagCount: 500
                  totalBagPerPalletCount: 50
                  totalWeightPerBagCount: 20
                  totalWeightCount: 10000
                properties:
                  status:
                    type: string
                    example: success
                  company_raw_materials:
                    type: array
                    example:
                      -
                        id: 1
                        company_name: 'Company A'
                        total_pallet: 10
                        bag_per_pallet: 50
                        total_bag: 500
                        weight_per_bag: 20
                        total_weight: 10000
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        company_name:
                          type: string
                          example: 'Company A'
                        total_pallet:
                          type: integer
                          example: 10
                        bag_per_pallet:
                          type: integer
                          example: 50
                        total_bag:
                          type: integer
                          example: 500
                        weight_per_bag:
                          type: integer
                          example: 20
                        total_weight:
                          type: integer
                          example: 10000
                  totalPalletCount:
                    type: integer
                    example: 10
                  totalBagCount:
                    type: integer
                    example: 500
                  totalBagPerPalletCount:
                    type: integer
                    example: 50
                  totalWeightPerBagCount:
                    type: integer
                    example: 20
                  totalWeightCount:
                    type: integer
                    example: 10000
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Invalid date format'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Invalid date format'
      tags:
        - 'Company Raw Materials'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date_filter:
                  type: string
                  description: 'The date to filter the company raw materials by.'
                  example: '2023-06-25'
              required:
                - date_filter
      security: []
  /api/finish-goods-calculation:
    get:
      summary: 'Calculate the totals for pallets, bags, bags per pallet, weight per bag, and total weight.'
      operationId: calculateTheTotalsForPalletsBagsBagsPerPalletWeightPerBagAndTotalWeight
      description: "This endpoint calculates the sum of various properties of company raw materials filtered by a specific date.\nThe properties include total pallet count, total bag count, total bags per pallet count, total weight per bag count, and total weight count."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  company_raw_materials:
                    -
                      id: 1
                      company_name: 'Company A'
                      total_pallet: 10
                      bag_per_pallet: 50
                      total_bag: 500
                      weight_per_bag: 20
                      total_weight: 10000
                  totalPalletCount: 10
                  totalBagCount: 500
                  totalBagPerPalletCount: 50
                  totalWeightPerBagCount: 20
                  totalWeightCount: 10000
                properties:
                  status:
                    type: string
                    example: success
                  company_raw_materials:
                    type: array
                    example:
                      -
                        id: 1
                        company_name: 'Company A'
                        total_pallet: 10
                        bag_per_pallet: 50
                        total_bag: 500
                        weight_per_bag: 20
                        total_weight: 10000
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        company_name:
                          type: string
                          example: 'Company A'
                        total_pallet:
                          type: integer
                          example: 10
                        bag_per_pallet:
                          type: integer
                          example: 50
                        total_bag:
                          type: integer
                          example: 500
                        weight_per_bag:
                          type: integer
                          example: 20
                        total_weight:
                          type: integer
                          example: 10000
                  totalPalletCount:
                    type: integer
                    example: 10
                  totalBagCount:
                    type: integer
                    example: 500
                  totalBagPerPalletCount:
                    type: integer
                    example: 50
                  totalWeightPerBagCount:
                    type: integer
                    example: 20
                  totalWeightCount:
                    type: integer
                    example: 10000
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Invalid date format'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Invalid date format'
      tags:
        - 'Company Raw Materials'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date_filter:
                  type: string
                  description: 'The date to filter the company raw materials by.'
                  example: '2023-06-25'
              required:
                - date_filter
      security: []
  /api/finish-goods:
    get:
      summary: 'Display a listing of the finish goods.'
      operationId: displayAListingOfTheFinishGoods
      description: 'This endpoint returns a list of all finish goods with their associated product and size details.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"status\": \"success\",\n \"finishGoods\": [\n     {\n         \"id\": 15fjl5-4f45t-5g456y-g5t,\n         \"product_id\": 1g5l67-54yb6-8u567-65g,\n         \"size_id\": 1g5l67-54yb6-8u567-65g5,\n         \"sqm_per_roll\": 100,\n         \"roll_quantity\": 10,\n         \"total_sqm\": 1000,\n         \"pallet\": \"Pallet 1\",\n         \"pallet_name\": \"Pallet A\",\n         \"details\": \"Details of finish goods\",\n         \"boxes\": 5,\n         \"product\": {\n             \"id\": 1g5l67-54yb6-8u567-65g,\n             \"product_name\": \"Product A\"\n         },\n         \"size\": {\n             \"id\": 1g5l67-54yb6-8u567-65g5,\n             \"size_in_cm\": 100,\n             \"size_in_mm\": 1000,\n             \"micron\": 50\n         }\n     }\n ]\n}"
      tags:
        - 'Finish Goods'
      security: []
    post:
      summary: 'Store a newly created finish good in storage.'
      operationId: storeANewlyCreatedFinishGoodInStorage
      description: 'This endpoint allows you to create a new finish good.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Finish Goods is saved'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Finish Goods is saved'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    product_id:
                      - 'Product is required'
                    size_id:
                      - 'Size is required'
                    sqm_per_roll:
                      - 'Sqm Per Roll is required'
                      - 'Sqm Per Roll must be numeric'
                    roll_quantity:
                      - 'Roll Quantity is required'
                      - 'Roll Quantity must be numeric'
                    total_sqm:
                      - 'Total Sqm is required'
                      - 'Total Sqm must be numeric'
                    pallet:
                      - 'Pallet is required'
                    pallet_name:
                      - 'Pallet Name is required'
                    details:
                      - 'Details is required'
                    boxes:
                      - 'Boxes is required'
                      - 'Boxes must be numeric'
                properties:
                  errors:
                    type: object
                    properties:
                      product_id:
                        type: array
                        example:
                          - 'Product is required'
                        items:
                          type: string
                      size_id:
                        type: array
                        example:
                          - 'Size is required'
                        items:
                          type: string
                      sqm_per_roll:
                        type: array
                        example:
                          - 'Sqm Per Roll is required'
                          - 'Sqm Per Roll must be numeric'
                        items:
                          type: string
                      roll_quantity:
                        type: array
                        example:
                          - 'Roll Quantity is required'
                          - 'Roll Quantity must be numeric'
                        items:
                          type: string
                      total_sqm:
                        type: array
                        example:
                          - 'Total Sqm is required'
                          - 'Total Sqm must be numeric'
                        items:
                          type: string
                      pallet:
                        type: array
                        example:
                          - 'Pallet is required'
                        items:
                          type: string
                      pallet_name:
                        type: array
                        example:
                          - 'Pallet Name is required'
                        items:
                          type: string
                      details:
                        type: array
                        example:
                          - 'Details is required'
                        items:
                          type: string
                      boxes:
                        type: array
                        example:
                          - 'Boxes is required'
                          - 'Boxes must be numeric'
                        items:
                          type: string
      tags:
        - 'Finish Goods'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  description: 'The ID of the product.'
                  example: 15
                size_id:
                  type: integer
                  description: 'The ID of the size.'
                  example: 1
                sqm_per_roll:
                  type: numeric
                  description: 'The square meters per roll.'
                  example: '100'
                roll_quantity:
                  type: numeric
                  description: 'The quantity of rolls.'
                  example: '10'
                total_sqm:
                  type: numeric
                  description: 'The total square meters.'
                  example: '1000'
                pallet:
                  type: string
                  description: 'The pallet information.'
                  example: 'Pallet 1'
                pallet_name:
                  type: string
                  description: 'The name of the pallet.'
                  example: 'Pallet A'
                details:
                  type: string
                  description: 'The details of the finish goods.'
                  example: 'Details of finish goods'
                boxes:
                  type: numeric
                  description: 'The number of boxes.'
                  example: '5'
              required:
                - product_id
                - size_id
                - sqm_per_roll
                - roll_quantity
                - total_sqm
                - pallet
                - pallet_name
                - details
                - boxes
      security: []
  '/api/finish-goods/{id}':
    put:
      summary: 'Update the specified finish good in storage.'
      operationId: updateTheSpecifiedFinishGoodInStorage
      description: 'This endpoint allows you to update an existing finish good by providing its ID and the updated information.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Finish Goods is updated'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Finish Goods is updated'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    product_id:
                      - 'Product is required'
                    size_id:
                      - 'Size is required'
                    sqm_per_roll:
                      - 'Sqm Per Roll is required'
                      - 'Sqm Per Roll must be numeric'
                    roll_quantity:
                      - 'Roll Quantity is required'
                      - 'Roll Quantity must be numeric'
                    total_sqm:
                      - 'Total Sqm is required'
                      - 'Total Sqm must be numeric'
                    pallet:
                      - 'Pallet is required'
                    pallet_name:
                      - 'Pallet Name is required'
                    details:
                      - 'Details is required'
                    boxes:
                      - 'Boxes is required'
                      - 'Boxes must be numeric'
                properties:
                  errors:
                    type: object
                    properties:
                      product_id:
                        type: array
                        example:
                          - 'Product is required'
                        items:
                          type: string
                      size_id:
                        type: array
                        example:
                          - 'Size is required'
                        items:
                          type: string
                      sqm_per_roll:
                        type: array
                        example:
                          - 'Sqm Per Roll is required'
                          - 'Sqm Per Roll must be numeric'
                        items:
                          type: string
                      roll_quantity:
                        type: array
                        example:
                          - 'Roll Quantity is required'
                          - 'Roll Quantity must be numeric'
                        items:
                          type: string
                      total_sqm:
                        type: array
                        example:
                          - 'Total Sqm is required'
                          - 'Total Sqm must be numeric'
                        items:
                          type: string
                      pallet:
                        type: array
                        example:
                          - 'Pallet is required'
                        items:
                          type: string
                      pallet_name:
                        type: array
                        example:
                          - 'Pallet Name is required'
                        items:
                          type: string
                      details:
                        type: array
                        example:
                          - 'Details is required'
                        items:
                          type: string
                      boxes:
                        type: array
                        example:
                          - 'Boxes is required'
                          - 'Boxes must be numeric'
                        items:
                          type: string
      tags:
        - 'Finish Goods'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  description: 'The ID of the product.'
                  example: 1
                size_id:
                  type: integer
                  description: 'The ID of the size.'
                  example: 154
                sqm_per_roll:
                  type: numeric
                  description: 'The square meters per roll.'
                  example: '100'
                roll_quantity:
                  type: numeric
                  description: 'The quantity of rolls.'
                  example: '10'
                total_sqm:
                  type: numeric
                  description: 'The total square meters.'
                  example: '1000'
                pallet:
                  type: string
                  description: 'The pallet information.'
                  example: 'Pallet 1'
                pallet_name:
                  type: string
                  description: 'The name of the pallet.'
                  example: 'Pallet A'
                details:
                  type: string
                  description: 'The details of the finish goods.'
                  example: 'Details of finish goods'
                boxes:
                  type: numeric
                  description: 'The number of boxes.'
                  example: '5'
              required:
                - product_id
                - size_id
                - sqm_per_roll
                - roll_quantity
                - total_sqm
                - pallet
                - pallet_name
                - details
                - boxes
      security: []
    delete:
      summary: 'Remove the specified finish good from storage.'
      operationId: removeTheSpecifiedFinishGoodFromStorage
      description: 'This endpoint allows you to delete a finish good by providing its ID.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Finish Goods is deleted'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Finish Goods is deleted'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'No records found'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'No records found'
      tags:
        - 'Finish Goods'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the finish good to update.'
        example: 1dlfgl5-5rth-5fhfgh-b56-gthf
        required: true
        schema:
          type: string
  /api/products:
    get:
      summary: 'Products list'
      operationId: productsList
      description: 'Get a list of all products available in system.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"status\": \"success\",\n \"products\": [\n     {\n         \"id\": 1dfn4k5-43tn4gkn-434,\n         \"hsn_code\": \"1234\",\n         \"product_name\": \"Product A\",\n         \"sales\": 100,\n         \"purchase\": 90,\n         \"water_absorption\": \"5%\",\n         \"field\": \"Field A\"\n     },\n     ...\n ]\n}"
      tags:
        - Products
      security: []
    post:
      summary: 'Create Product'
      operationId: createProduct
      description: 'It store a newly created product in the system.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Product details are stored'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Product details are stored'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Validation error'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Validation error'
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hsn_code:
                  type: string
                  description: 'The HSN code of the product.'
                  example: '1234'
                product_name:
                  type: string
                  description: 'The name of the product.'
                  example: 'Product A'
                sales:
                  type: number
                  description: 'The sales price of the product.'
                  example: 100.0
                purchase:
                  type: number
                  description: 'The purchase price of the product.'
                  example: 90.0
                water_absorption:
                  type: string
                  description: 'The water absorption rate of the product.'
                  example: '5'
                field:
                  type: string
                  description: 'The field of the product.'
                  example: 'Field A'
              required:
                - hsn_code
                - product_name
                - sales
                - purchase
      security: []
  '/api/products/{id}':
    put:
      summary: 'Product Update'
      operationId: productUpdate
      description: 'It update the specified product in the system.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Product details are updated'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Product details are updated'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Validation error'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Validation error'
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hsn_code:
                  type: string
                  description: 'The HSN code of the product.'
                  example: '1234'
                product_name:
                  type: string
                  description: 'The name of the product.'
                  example: 'Product A'
                sales:
                  type: number
                  description: 'The sales price of the product.'
                  example: 100.0
                purchase:
                  type: number
                  description: 'The purchase price of the product.'
                  example: 90.0
                water_absorption:
                  type: string
                  description: 'The water absorption rate of the product.'
                  example: '10'
                field:
                  type: string
                  description: 'The field of the product.'
                  example: 'Field A'
              required:
                - hsn_code
                - product_name
                - sales
                - purchase
      security: []
    delete:
      summary: 'Delete Product'
      operationId: deleteProduct
      description: 'It remove the specified product from the system.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Product details are deleted'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Product details are deleted'
      tags:
        - Products
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product to update.'
        example: '1'
        required: true
        schema:
          type: string
  /api/sizes:
    get:
      summary: 'Sizes list'
      operationId: sizesList
      description: 'Get a list of all sizes available in system.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"status\": \"success\",\n \"sizes\": [\n     {\n         \"id\": 1dfn4k5-43tn4gkn-434,\n         \"size_in_cm\": \"50\",\n         \"size_in_mm\": \"550\",\n         \"product_name\": \"Product A\",\n         \"hsn_code\": \"9035\",\n         \"thickness\": \"15mm\",\n         \"micron\": \"500\",\n         \"grade\": null,\n         \"width\": null,\n     },\n     ...\n ]\n}"
      tags:
        - Sizes
      security: []
    post:
      summary: 'Create Size'
      operationId: createSize
      description: "Store a newly created size in the database.\nThis endpoint allows you to store size details. The variables should be provided in the request body."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Size details are stored'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Size details are stored'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    size_in_cm:
                      - 'Size in centimeters is required'
                      - 'Size in centimeters must be numeric'
                    size_in_mm:
                      - 'Size in millimeters is required'
                      - 'Size in millimeters must be numeric'
                    product_name:
                      - 'Product Name is required'
                    hsn_code:
                      - 'HSN code is required'
                    thickness:
                      - 'Thickness is required'
                    micron:
                      - 'Micron is required'
                      - 'Micron must be numeric'
                properties:
                  errors:
                    type: object
                    properties:
                      size_in_cm:
                        type: array
                        example:
                          - 'Size in centimeters is required'
                          - 'Size in centimeters must be numeric'
                        items:
                          type: string
                      size_in_mm:
                        type: array
                        example:
                          - 'Size in millimeters is required'
                          - 'Size in millimeters must be numeric'
                        items:
                          type: string
                      product_name:
                        type: array
                        example:
                          - 'Product Name is required'
                        items:
                          type: string
                      hsn_code:
                        type: array
                        example:
                          - 'HSN code is required'
                        items:
                          type: string
                      thickness:
                        type: array
                        example:
                          - 'Thickness is required'
                        items:
                          type: string
                      micron:
                        type: array
                        example:
                          - 'Micron is required'
                          - 'Micron must be numeric'
                        items:
                          type: string
      tags:
        - Sizes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                size_in_cm:
                  type: numeric
                  description: 'The size in centimeters.'
                  example: '100'
                size_in_mm:
                  type: numeric
                  description: 'The size in millimeters.'
                  example: '1000'
                product_name:
                  type: string
                  description: 'The name of the product.'
                  example: 'Product A'
                hsn_code:
                  type: string
                  description: 'The HSN code of the product.'
                  example: '1234'
                thickness:
                  type: string
                  description: 'The thickness of the product.'
                  example: '5'
                micron:
                  type: numeric
                  description: 'The micron value of the product.'
                  example: '50'
                grade:
                  type: string
                  description: 'The grade of the product.'
                  example: 'Grade A'
                width:
                  type: string
                  description: 'The width of the product.'
                  example: '200'
              required:
                - size_in_cm
                - size_in_mm
                - product_name
                - hsn_code
                - thickness
                - micron
      security: []
  '/api/sizes/{id}':
    put:
      summary: 'Update Size'
      operationId: updateSize
      description: "Update the specified size in the database.\nThis endpoint allows you to update size details by providing the size ID and the updated information."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Size details are updated'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Size details are updated'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    size_in_cm:
                      - 'Size in centimeters is required'
                      - 'Size in centimeters must be numeric'
                    size_in_mm:
                      - 'Size in millimeters is required'
                      - 'Size in millimeters must be numeric'
                    product_name:
                      - 'Product Name is required'
                    hsn_code:
                      - 'HSN code is required'
                    thickness:
                      - 'Thickness is required'
                    micron:
                      - 'Micron is required'
                      - 'Micron must be numeric'
                properties:
                  errors:
                    type: object
                    properties:
                      size_in_cm:
                        type: array
                        example:
                          - 'Size in centimeters is required'
                          - 'Size in centimeters must be numeric'
                        items:
                          type: string
                      size_in_mm:
                        type: array
                        example:
                          - 'Size in millimeters is required'
                          - 'Size in millimeters must be numeric'
                        items:
                          type: string
                      product_name:
                        type: array
                        example:
                          - 'Product Name is required'
                        items:
                          type: string
                      hsn_code:
                        type: array
                        example:
                          - 'HSN code is required'
                        items:
                          type: string
                      thickness:
                        type: array
                        example:
                          - 'Thickness is required'
                        items:
                          type: string
                      micron:
                        type: array
                        example:
                          - 'Micron is required'
                          - 'Micron must be numeric'
                        items:
                          type: string
      tags:
        - Sizes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                size_in_cm:
                  type: numeric
                  description: 'The size in centimeters.'
                  example: '100'
                size_in_mm:
                  type: numeric
                  description: 'The size in millimeters.'
                  example: '1000'
                product_name:
                  type: string
                  description: 'The name of the product.'
                  example: 'Product A'
                hsn_code:
                  type: string
                  description: 'The HSN code of the product.'
                  example: '1234'
                thickness:
                  type: string
                  description: 'The thickness of the product.'
                  example: '5'
                micron:
                  type: numeric
                  description: 'The micron value of the product.'
                  example: '50'
                grade:
                  type: string
                  description: 'The grade of the product.'
                  example: 'Grade A'
                width:
                  type: string
                  description: 'The width of the product.'
                  example: '200'
              required:
                - size_in_cm
                - size_in_mm
                - product_name
                - hsn_code
                - thickness
                - micron
      security: []
    delete:
      summary: 'Delete Size'
      operationId: deleteSize
      description: "Remove the specified size from the database.\nThis endpoint allows you to delete a size by providing its ID."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Size is deleted'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Size is deleted'
        404:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n 'status': 'error',\n \"message\": \"No records found\"\n}"
      tags:
        - Sizes
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the size to update.'
        example: '1'
        required: true
        schema:
          type: string
tags:
  -
    name: Authentication
    description: ''
  -
    name: 'Bank Management'
    description: ''
  -
    name: 'Company Profile'
    description: ''
  -
    name: 'Company Raw Materials'
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: 'Finish Goods'
    description: ''
  -
    name: Products
    description: ''
  -
    name: Sizes
    description: ''
